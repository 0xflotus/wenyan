
// Generated from wenyan.g4 by ANTLR 4.7.2


#include "wenyanLexer.h"


using namespace antlr4;


wenyanLexer::wenyanLexer(CharStream *input) : Lexer(input) {
  _interpreter = new atn::LexerATNSimulator(this, _atn, _decisionToDFA, _sharedContextCache);
}

wenyanLexer::~wenyanLexer() {
  delete _interpreter;
}

std::string wenyanLexer::getGrammarFileName() const {
  return "wenyan.g4";
}

const std::vector<std::string>& wenyanLexer::getRuleNames() const {
  return _ruleNames;
}

const std::vector<std::string>& wenyanLexer::getChannelNames() const {
  return _channelNames;
}

const std::vector<std::string>& wenyanLexer::getModeNames() const {
  return _modeNames;
}

const std::vector<std::string>& wenyanLexer::getTokenNames() const {
  return _tokenNames;
}

dfa::Vocabulary& wenyanLexer::getVocabulary() const {
  return _vocabulary;
}

const std::vector<uint16_t> wenyanLexer::getSerializedATN() const {
  return _serializedATN;
}

const atn::ATN& wenyanLexer::getATN() const {
  return _atn;
}




// Static vars and initialization.
std::vector<dfa::DFA> wenyanLexer::_decisionToDFA;
atn::PredictionContextCache wenyanLexer::_sharedContextCache;

// We own the ATN which in turn owns the ATN states.
atn::ATN wenyanLexer::_atn;
std::vector<uint16_t> wenyanLexer::_serializedATN;

std::vector<std::string> wenyanLexer::_ruleNames = {
  u8"T__0", u8"T__1", u8"T__2", u8"T__3", u8"T__4", u8"T__5", u8"T__6", 
  u8"T__7", u8"T__8", u8"T__9", u8"T__10", u8"T__11", u8"T__12", u8"T__13", 
  u8"T__14", u8"T__15", u8"T__16", u8"T__17", u8"T__18", u8"T__19", u8"T__20", 
  u8"T__21", u8"T__22", u8"T__23", u8"T__24", u8"T__25", u8"T__26", u8"T__27", 
  u8"T__28", u8"T__29", u8"T__30", u8"T__31", u8"T__32", u8"T__33", u8"T__34", 
  u8"T__35", u8"T__36", u8"T__37", u8"T__38", u8"T__39", u8"T__40", u8"T__41", 
  u8"T__42", u8"T__43", u8"T__44", u8"STRING_LITERAL", u8"IDENTIFIER", u8"ARITH_BINARY_OP", 
  u8"LOGIC_BINARY_OP", u8"POST_MOD_MATH_OP", u8"UNARY_OP", u8"PREPOSITION_YU", 
  u8"PREPOSITION_YI", u8"IF", u8"ELSE", u8"IF_LOGIC_OP", u8"FOR_START_ARR", 
  u8"FOR_START_ENUM", u8"FOR_START_WHILE", u8"FOR_MID_ARR", u8"FOR_MID_ENUM", 
  u8"FOR_IF_END", u8"FLOAT_NUM", u8"FLOAT_NUM_KEYWORDS", u8"INT_NUM", u8"INT_NUM_KEYWORDS", 
  u8"TYPE", u8"BOOL_VALUE", u8"WS", u8"BREAK"
};

std::vector<std::string> wenyanLexer::_channelNames = {
  "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
};

std::vector<std::string> wenyanLexer::_modeNames = {
  u8"DEFAULT_MODE"
};

std::vector<std::string> wenyanLexer::_literalNames = {
  "", u8"'\u592B'", u8"'\u4E4B'", u8"'\u5176\u9918'", u8"'\u9577'", u8"'\u929C'", 
  u8"'\u5176'", u8"'\u5145'", u8"'\u65BD'", u8"'\u65BD\u5176'", u8"'\u53D6'", 
  u8"'\u4EE5\u65BD'", u8"'\u543E\u6709'", u8"'\u8853'", u8"'\u6B32\u884C\u662F\u8853'", 
  u8"'\u5FC5\u5148\u5F97'", u8"'\u66F0'", u8"'\u662F\u8853\u66F0'", u8"'\u4E43\u884C\u662F\u8853\u66F0'", 
  u8"'\u662F\u8B02'", u8"'\u4E4B\u8853\u4E5F'", u8"'\u8005'", u8"'\u4ECA\u6709'", 
  u8"'\u540D\u4E4B'", u8"'\u6709'", u8"'\u9664'", u8"'\u6614\u4E4B'", u8"'\u4ECA'", 
  u8"'\u662F\u77E3'", u8"'\u4ECA\u4E0D\u5FA9\u5B58\u77E3'", u8"'\u4E43\u5F97'", 
  u8"'\u4E43\u6B78\u7A7A\u7121'", u8"'\u4E43\u5F97\u77E3'", u8"'\u543E\u5617\u89C0'", 
  u8"'\u4E4B\u66F8'", u8"'\u65B9\u609F'", u8"'\u4E4B\u7FA9'", u8"'\u7269'", 
  u8"'\u5176\u7269\u5982\u662F'", u8"'\u7269\u4E4B'", u8"'\u4E4B\u7269\u4E5F'", 
  u8"'\u66F8\u4E4B'", u8"'\u6CE8\u66F0'", u8"'\u758F\u66F0'", u8"'\u6279\u66F0'", 
  u8"'\u566B'", "", "", "", "", u8"'\u6240\u9918\u5E7E\u4F55'", u8"'\u8B8A'", 
  u8"'\u65BC'", u8"'\u4EE5'", u8"'\u82E5'", u8"'\u82E5\u975E'", "", u8"'\u51E1'", 
  u8"'\u70BA\u662F'", u8"'\u6046\u70BA\u662F'", u8"'\u4E2D\u4E4B'", u8"'\u904D'", 
  "", "", "", "", "", "", "", "", u8"'\u4E43\u6B62'"
};

std::vector<std::string> wenyanLexer::_symbolicNames = {
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
  "", "", "", "", "", "", "", "", "", "", u8"STRING_LITERAL", u8"IDENTIFIER", 
  u8"ARITH_BINARY_OP", u8"LOGIC_BINARY_OP", u8"POST_MOD_MATH_OP", u8"UNARY_OP", 
  u8"PREPOSITION_YU", u8"PREPOSITION_YI", u8"IF", u8"ELSE", u8"IF_LOGIC_OP", 
  u8"FOR_START_ARR", u8"FOR_START_ENUM", u8"FOR_START_WHILE", u8"FOR_MID_ARR", 
  u8"FOR_MID_ENUM", u8"FOR_IF_END", u8"FLOAT_NUM", u8"FLOAT_NUM_KEYWORDS", 
  u8"INT_NUM", u8"INT_NUM_KEYWORDS", u8"TYPE", u8"BOOL_VALUE", u8"WS", u8"BREAK"
};

dfa::Vocabulary wenyanLexer::_vocabulary(_literalNames, _symbolicNames);

std::vector<std::string> wenyanLexer::_tokenNames;

wenyanLexer::Initializer::Initializer() {
  // This code could be in a static initializer lambda, but VS doesn't allow access to private class members from there.
	for (size_t i = 0; i < _symbolicNames.size(); ++i) {
		std::string name = _vocabulary.getLiteralName(i);
		if (name.empty()) {
			name = _vocabulary.getSymbolicName(i);
		}

		if (name.empty()) {
			_tokenNames.push_back("<INVALID>");
		} else {
      _tokenNames.push_back(name);
    }
	}

  _serializedATN = {
    0x3, 0x608b, 0xa72a, 0x8133, 0xb9ed, 0x417c, 0x3be7, 0x7786, 0x5964, 
    0x2, 0x48, 0x18c, 0x8, 0x1, 0x4, 0x2, 0x9, 0x2, 0x4, 0x3, 0x9, 0x3, 
    0x4, 0x4, 0x9, 0x4, 0x4, 0x5, 0x9, 0x5, 0x4, 0x6, 0x9, 0x6, 0x4, 0x7, 
    0x9, 0x7, 0x4, 0x8, 0x9, 0x8, 0x4, 0x9, 0x9, 0x9, 0x4, 0xa, 0x9, 0xa, 
    0x4, 0xb, 0x9, 0xb, 0x4, 0xc, 0x9, 0xc, 0x4, 0xd, 0x9, 0xd, 0x4, 0xe, 
    0x9, 0xe, 0x4, 0xf, 0x9, 0xf, 0x4, 0x10, 0x9, 0x10, 0x4, 0x11, 0x9, 
    0x11, 0x4, 0x12, 0x9, 0x12, 0x4, 0x13, 0x9, 0x13, 0x4, 0x14, 0x9, 0x14, 
    0x4, 0x15, 0x9, 0x15, 0x4, 0x16, 0x9, 0x16, 0x4, 0x17, 0x9, 0x17, 0x4, 
    0x18, 0x9, 0x18, 0x4, 0x19, 0x9, 0x19, 0x4, 0x1a, 0x9, 0x1a, 0x4, 0x1b, 
    0x9, 0x1b, 0x4, 0x1c, 0x9, 0x1c, 0x4, 0x1d, 0x9, 0x1d, 0x4, 0x1e, 0x9, 
    0x1e, 0x4, 0x1f, 0x9, 0x1f, 0x4, 0x20, 0x9, 0x20, 0x4, 0x21, 0x9, 0x21, 
    0x4, 0x22, 0x9, 0x22, 0x4, 0x23, 0x9, 0x23, 0x4, 0x24, 0x9, 0x24, 0x4, 
    0x25, 0x9, 0x25, 0x4, 0x26, 0x9, 0x26, 0x4, 0x27, 0x9, 0x27, 0x4, 0x28, 
    0x9, 0x28, 0x4, 0x29, 0x9, 0x29, 0x4, 0x2a, 0x9, 0x2a, 0x4, 0x2b, 0x9, 
    0x2b, 0x4, 0x2c, 0x9, 0x2c, 0x4, 0x2d, 0x9, 0x2d, 0x4, 0x2e, 0x9, 0x2e, 
    0x4, 0x2f, 0x9, 0x2f, 0x4, 0x30, 0x9, 0x30, 0x4, 0x31, 0x9, 0x31, 0x4, 
    0x32, 0x9, 0x32, 0x4, 0x33, 0x9, 0x33, 0x4, 0x34, 0x9, 0x34, 0x4, 0x35, 
    0x9, 0x35, 0x4, 0x36, 0x9, 0x36, 0x4, 0x37, 0x9, 0x37, 0x4, 0x38, 0x9, 
    0x38, 0x4, 0x39, 0x9, 0x39, 0x4, 0x3a, 0x9, 0x3a, 0x4, 0x3b, 0x9, 0x3b, 
    0x4, 0x3c, 0x9, 0x3c, 0x4, 0x3d, 0x9, 0x3d, 0x4, 0x3e, 0x9, 0x3e, 0x4, 
    0x3f, 0x9, 0x3f, 0x4, 0x40, 0x9, 0x40, 0x4, 0x41, 0x9, 0x41, 0x4, 0x42, 
    0x9, 0x42, 0x4, 0x43, 0x9, 0x43, 0x4, 0x44, 0x9, 0x44, 0x4, 0x45, 0x9, 
    0x45, 0x4, 0x46, 0x9, 0x46, 0x4, 0x47, 0x9, 0x47, 0x3, 0x2, 0x3, 0x2, 
    0x3, 0x3, 0x3, 0x3, 0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x3, 0x5, 0x3, 0x5, 
    0x3, 0x6, 0x3, 0x6, 0x3, 0x7, 0x3, 0x7, 0x3, 0x8, 0x3, 0x8, 0x3, 0x9, 
    0x3, 0x9, 0x3, 0xa, 0x3, 0xa, 0x3, 0xa, 0x3, 0xb, 0x3, 0xb, 0x3, 0xc, 
    0x3, 0xc, 0x3, 0xc, 0x3, 0xd, 0x3, 0xd, 0x3, 0xd, 0x3, 0xe, 0x3, 0xe, 
    0x3, 0xf, 0x3, 0xf, 0x3, 0xf, 0x3, 0xf, 0x3, 0xf, 0x3, 0x10, 0x3, 0x10, 
    0x3, 0x10, 0x3, 0x10, 0x3, 0x11, 0x3, 0x11, 0x3, 0x12, 0x3, 0x12, 0x3, 
    0x12, 0x3, 0x12, 0x3, 0x13, 0x3, 0x13, 0x3, 0x13, 0x3, 0x13, 0x3, 0x13, 
    0x3, 0x13, 0x3, 0x14, 0x3, 0x14, 0x3, 0x14, 0x3, 0x15, 0x3, 0x15, 0x3, 
    0x15, 0x3, 0x15, 0x3, 0x16, 0x3, 0x16, 0x3, 0x17, 0x3, 0x17, 0x3, 0x17, 
    0x3, 0x18, 0x3, 0x18, 0x3, 0x18, 0x3, 0x19, 0x3, 0x19, 0x3, 0x1a, 0x3, 
    0x1a, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1d, 
    0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 
    0x1e, 0x3, 0x1e, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x20, 0x3, 0x20, 
    0x3, 0x20, 0x3, 0x20, 0x3, 0x20, 0x3, 0x21, 0x3, 0x21, 0x3, 0x21, 0x3, 
    0x21, 0x3, 0x22, 0x3, 0x22, 0x3, 0x22, 0x3, 0x22, 0x3, 0x23, 0x3, 0x23, 
    0x3, 0x23, 0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 0x3, 0x25, 0x3, 0x25, 0x3, 
    0x25, 0x3, 0x26, 0x3, 0x26, 0x3, 0x27, 0x3, 0x27, 0x3, 0x27, 0x3, 0x27, 
    0x3, 0x27, 0x3, 0x28, 0x3, 0x28, 0x3, 0x28, 0x3, 0x29, 0x3, 0x29, 0x3, 
    0x29, 0x3, 0x29, 0x3, 0x2a, 0x3, 0x2a, 0x3, 0x2a, 0x3, 0x2b, 0x3, 0x2b, 
    0x3, 0x2b, 0x3, 0x2c, 0x3, 0x2c, 0x3, 0x2c, 0x3, 0x2d, 0x3, 0x2d, 0x3, 
    0x2d, 0x3, 0x2e, 0x3, 0x2e, 0x3, 0x2f, 0x3, 0x2f, 0x3, 0x2f, 0x3, 0x2f, 
    0x7, 0x2f, 0x11d, 0xa, 0x2f, 0xc, 0x2f, 0xe, 0x2f, 0x120, 0xb, 0x2f, 
    0x3, 0x2f, 0x3, 0x2f, 0x3, 0x2f, 0x3, 0x30, 0x3, 0x30, 0x6, 0x30, 0x127, 
    0xa, 0x30, 0xd, 0x30, 0xe, 0x30, 0x128, 0x3, 0x30, 0x3, 0x30, 0x3, 0x31, 
    0x3, 0x31, 0x3, 0x32, 0x3, 0x32, 0x3, 0x32, 0x3, 0x32, 0x3, 0x32, 0x3, 
    0x32, 0x3, 0x32, 0x3, 0x32, 0x5, 0x32, 0x137, 0xa, 0x32, 0x3, 0x33, 
    0x3, 0x33, 0x3, 0x33, 0x3, 0x33, 0x3, 0x33, 0x3, 0x34, 0x3, 0x34, 0x3, 
    0x35, 0x3, 0x35, 0x3, 0x36, 0x3, 0x36, 0x3, 0x37, 0x3, 0x37, 0x3, 0x38, 
    0x3, 0x38, 0x3, 0x38, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 
    0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 
    0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x3, 0x39, 0x5, 0x39, 0x158, 0xa, 0x39, 
    0x3, 0x3a, 0x3, 0x3a, 0x3, 0x3b, 0x3, 0x3b, 0x3, 0x3b, 0x3, 0x3c, 0x3, 
    0x3c, 0x3, 0x3c, 0x3, 0x3c, 0x3, 0x3d, 0x3, 0x3d, 0x3, 0x3d, 0x3, 0x3e, 
    0x3, 0x3e, 0x3, 0x3f, 0x3, 0x3f, 0x3, 0x3f, 0x5, 0x3f, 0x16b, 0xa, 0x3f, 
    0x3, 0x40, 0x3, 0x40, 0x3, 0x40, 0x3, 0x40, 0x3, 0x40, 0x6, 0x40, 0x172, 
    0xa, 0x40, 0xd, 0x40, 0xe, 0x40, 0x173, 0x3, 0x41, 0x3, 0x41, 0x3, 0x42, 
    0x6, 0x42, 0x179, 0xa, 0x42, 0xd, 0x42, 0xe, 0x42, 0x17a, 0x3, 0x43, 
    0x3, 0x43, 0x3, 0x44, 0x3, 0x44, 0x3, 0x45, 0x3, 0x45, 0x3, 0x46, 0x6, 
    0x46, 0x184, 0xa, 0x46, 0xd, 0x46, 0xe, 0x46, 0x185, 0x3, 0x46, 0x3, 
    0x46, 0x3, 0x47, 0x3, 0x47, 0x3, 0x47, 0x2, 0x2, 0x48, 0x3, 0x3, 0x5, 
    0x4, 0x7, 0x5, 0x9, 0x6, 0xb, 0x7, 0xd, 0x8, 0xf, 0x9, 0x11, 0xa, 0x13, 
    0xb, 0x15, 0xc, 0x17, 0xd, 0x19, 0xe, 0x1b, 0xf, 0x1d, 0x10, 0x1f, 0x11, 
    0x21, 0x12, 0x23, 0x13, 0x25, 0x14, 0x27, 0x15, 0x29, 0x16, 0x2b, 0x17, 
    0x2d, 0x18, 0x2f, 0x19, 0x31, 0x1a, 0x33, 0x1b, 0x35, 0x1c, 0x37, 0x1d, 
    0x39, 0x1e, 0x3b, 0x1f, 0x3d, 0x20, 0x3f, 0x21, 0x41, 0x22, 0x43, 0x23, 
    0x45, 0x24, 0x47, 0x25, 0x49, 0x26, 0x4b, 0x27, 0x4d, 0x28, 0x4f, 0x29, 
    0x51, 0x2a, 0x53, 0x2b, 0x55, 0x2c, 0x57, 0x2d, 0x59, 0x2e, 0x5b, 0x2f, 
    0x5d, 0x30, 0x5f, 0x31, 0x61, 0x32, 0x63, 0x33, 0x65, 0x34, 0x67, 0x35, 
    0x69, 0x36, 0x6b, 0x37, 0x6d, 0x38, 0x6f, 0x39, 0x71, 0x3a, 0x73, 0x3b, 
    0x75, 0x3c, 0x77, 0x3d, 0x79, 0x3e, 0x7b, 0x3f, 0x7d, 0x40, 0x7f, 0x41, 
    0x81, 0x42, 0x83, 0x43, 0x85, 0x44, 0x87, 0x45, 0x89, 0x46, 0x8b, 0x47, 
    0x8d, 0x48, 0x3, 0x2, 0x9, 0x3, 0x2, 0x300f, 0x300f, 0x5, 0x2, 0x4e5a, 
    0x4e5a, 0x52a2, 0x52a2, 0x6e1d, 0x6e1d, 0xc, 0x2, 0x5208, 0x5208, 0x57c5, 
    0x57c5, 0x5877, 0x5877, 0x5fb0, 0x5fb0, 0x5fff, 0x5fff, 0x6bed, 0x6bed, 
    0x6e3c, 0x6e3c, 0x6f22, 0x6f22, 0x7d74, 0x7d74, 0x91d2, 0x91d2, 0x1b, 
    0x2, 0x4e02, 0x4e02, 0x4e05, 0x4e05, 0x4e0b, 0x4e0b, 0x4e5f, 0x4e5f, 
    0x4e8e, 0x4e8e, 0x4e96, 0x4e96, 0x4eae, 0x4eae, 0x5106, 0x5106, 0x5148, 
    0x5148, 0x516d, 0x516d, 0x516f, 0x516f, 0x5343, 0x5343, 0x5345, 0x5345, 
    0x56dd, 0x56dd, 0x5795, 0x5795, 0x6977, 0x6977, 0x6b65, 0x6b65, 0x6e9f, 
    0x6e9f, 0x6f99, 0x6f99, 0x7680, 0x7680, 0x79ef, 0x79ef, 0x7a65, 0x7a65, 
    0x842e, 0x842e, 0x8f0b, 0x8f0b, 0x96f8, 0x96f8, 0x6, 0x2, 0x5219, 0x5219, 
    0x657a, 0x657a, 0x723d, 0x723d, 0x8a02, 0x8a02, 0x4, 0x2, 0x9672, 0x9672, 
    0x967f, 0x967f, 0x7, 0x2, 0xb, 0xc, 0xf, 0xf, 0x22, 0x22, 0x3004, 0x3004, 
    0xff0e, 0xff0e, 0x2, 0x197, 0x2, 0x3, 0x3, 0x2, 0x2, 0x2, 0x2, 0x5, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x7, 0x3, 0x2, 0x2, 0x2, 0x2, 0x9, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0xb, 0x3, 0x2, 0x2, 0x2, 0x2, 0xd, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0xf, 0x3, 0x2, 0x2, 0x2, 0x2, 0x11, 0x3, 0x2, 0x2, 0x2, 0x2, 0x13, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x15, 0x3, 0x2, 0x2, 0x2, 0x2, 0x17, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x19, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1b, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x1d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x21, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x23, 0x3, 0x2, 0x2, 0x2, 0x2, 0x25, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x27, 0x3, 0x2, 0x2, 0x2, 0x2, 0x29, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x2b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x2d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x2f, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x31, 0x3, 0x2, 0x2, 0x2, 0x2, 0x33, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x35, 0x3, 0x2, 0x2, 0x2, 0x2, 0x37, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x39, 0x3, 0x2, 0x2, 0x2, 0x2, 0x3b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x3d, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x3f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x41, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x43, 0x3, 0x2, 0x2, 0x2, 0x2, 0x45, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x47, 0x3, 0x2, 0x2, 0x2, 0x2, 0x49, 0x3, 0x2, 0x2, 0x2, 0x2, 0x4b, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x4d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x4f, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x51, 0x3, 0x2, 0x2, 0x2, 0x2, 0x53, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x55, 0x3, 0x2, 0x2, 0x2, 0x2, 0x57, 0x3, 0x2, 0x2, 0x2, 0x2, 0x59, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x5b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x5d, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x5f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x61, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x63, 0x3, 0x2, 0x2, 0x2, 0x2, 0x65, 0x3, 0x2, 0x2, 0x2, 0x2, 0x67, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x69, 0x3, 0x2, 0x2, 0x2, 0x2, 0x6b, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x6d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x6f, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x71, 0x3, 0x2, 0x2, 0x2, 0x2, 0x73, 0x3, 0x2, 0x2, 0x2, 0x2, 0x75, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x77, 0x3, 0x2, 0x2, 0x2, 0x2, 0x79, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x7b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x7d, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x7f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x81, 0x3, 0x2, 0x2, 0x2, 0x2, 0x83, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x85, 0x3, 0x2, 0x2, 0x2, 0x2, 0x87, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x89, 0x3, 0x2, 0x2, 0x2, 0x2, 0x8b, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x8d, 0x3, 0x2, 0x2, 0x2, 0x3, 0x8f, 0x3, 0x2, 0x2, 0x2, 0x5, 0x91, 
    0x3, 0x2, 0x2, 0x2, 0x7, 0x93, 0x3, 0x2, 0x2, 0x2, 0x9, 0x96, 0x3, 0x2, 
    0x2, 0x2, 0xb, 0x98, 0x3, 0x2, 0x2, 0x2, 0xd, 0x9a, 0x3, 0x2, 0x2, 0x2, 
    0xf, 0x9c, 0x3, 0x2, 0x2, 0x2, 0x11, 0x9e, 0x3, 0x2, 0x2, 0x2, 0x13, 
    0xa0, 0x3, 0x2, 0x2, 0x2, 0x15, 0xa3, 0x3, 0x2, 0x2, 0x2, 0x17, 0xa5, 
    0x3, 0x2, 0x2, 0x2, 0x19, 0xa8, 0x3, 0x2, 0x2, 0x2, 0x1b, 0xab, 0x3, 
    0x2, 0x2, 0x2, 0x1d, 0xad, 0x3, 0x2, 0x2, 0x2, 0x1f, 0xb2, 0x3, 0x2, 
    0x2, 0x2, 0x21, 0xb6, 0x3, 0x2, 0x2, 0x2, 0x23, 0xb8, 0x3, 0x2, 0x2, 
    0x2, 0x25, 0xbc, 0x3, 0x2, 0x2, 0x2, 0x27, 0xc2, 0x3, 0x2, 0x2, 0x2, 
    0x29, 0xc5, 0x3, 0x2, 0x2, 0x2, 0x2b, 0xc9, 0x3, 0x2, 0x2, 0x2, 0x2d, 
    0xcb, 0x3, 0x2, 0x2, 0x2, 0x2f, 0xce, 0x3, 0x2, 0x2, 0x2, 0x31, 0xd1, 
    0x3, 0x2, 0x2, 0x2, 0x33, 0xd3, 0x3, 0x2, 0x2, 0x2, 0x35, 0xd5, 0x3, 
    0x2, 0x2, 0x2, 0x37, 0xd8, 0x3, 0x2, 0x2, 0x2, 0x39, 0xda, 0x3, 0x2, 
    0x2, 0x2, 0x3b, 0xdd, 0x3, 0x2, 0x2, 0x2, 0x3d, 0xe3, 0x3, 0x2, 0x2, 
    0x2, 0x3f, 0xe6, 0x3, 0x2, 0x2, 0x2, 0x41, 0xeb, 0x3, 0x2, 0x2, 0x2, 
    0x43, 0xef, 0x3, 0x2, 0x2, 0x2, 0x45, 0xf3, 0x3, 0x2, 0x2, 0x2, 0x47, 
    0xf6, 0x3, 0x2, 0x2, 0x2, 0x49, 0xf9, 0x3, 0x2, 0x2, 0x2, 0x4b, 0xfc, 
    0x3, 0x2, 0x2, 0x2, 0x4d, 0xfe, 0x3, 0x2, 0x2, 0x2, 0x4f, 0x103, 0x3, 
    0x2, 0x2, 0x2, 0x51, 0x106, 0x3, 0x2, 0x2, 0x2, 0x53, 0x10a, 0x3, 0x2, 
    0x2, 0x2, 0x55, 0x10d, 0x3, 0x2, 0x2, 0x2, 0x57, 0x110, 0x3, 0x2, 0x2, 
    0x2, 0x59, 0x113, 0x3, 0x2, 0x2, 0x2, 0x5b, 0x116, 0x3, 0x2, 0x2, 0x2, 
    0x5d, 0x118, 0x3, 0x2, 0x2, 0x2, 0x5f, 0x124, 0x3, 0x2, 0x2, 0x2, 0x61, 
    0x12c, 0x3, 0x2, 0x2, 0x2, 0x63, 0x136, 0x3, 0x2, 0x2, 0x2, 0x65, 0x138, 
    0x3, 0x2, 0x2, 0x2, 0x67, 0x13d, 0x3, 0x2, 0x2, 0x2, 0x69, 0x13f, 0x3, 
    0x2, 0x2, 0x2, 0x6b, 0x141, 0x3, 0x2, 0x2, 0x2, 0x6d, 0x143, 0x3, 0x2, 
    0x2, 0x2, 0x6f, 0x145, 0x3, 0x2, 0x2, 0x2, 0x71, 0x157, 0x3, 0x2, 0x2, 
    0x2, 0x73, 0x159, 0x3, 0x2, 0x2, 0x2, 0x75, 0x15b, 0x3, 0x2, 0x2, 0x2, 
    0x77, 0x15e, 0x3, 0x2, 0x2, 0x2, 0x79, 0x162, 0x3, 0x2, 0x2, 0x2, 0x7b, 
    0x165, 0x3, 0x2, 0x2, 0x2, 0x7d, 0x16a, 0x3, 0x2, 0x2, 0x2, 0x7f, 0x16c, 
    0x3, 0x2, 0x2, 0x2, 0x81, 0x175, 0x3, 0x2, 0x2, 0x2, 0x83, 0x178, 0x3, 
    0x2, 0x2, 0x2, 0x85, 0x17c, 0x3, 0x2, 0x2, 0x2, 0x87, 0x17e, 0x3, 0x2, 
    0x2, 0x2, 0x89, 0x180, 0x3, 0x2, 0x2, 0x2, 0x8b, 0x183, 0x3, 0x2, 0x2, 
    0x2, 0x8d, 0x189, 0x3, 0x2, 0x2, 0x2, 0x8f, 0x90, 0x7, 0x592d, 0x2, 
    0x2, 0x90, 0x4, 0x3, 0x2, 0x2, 0x2, 0x91, 0x92, 0x7, 0x4e4d, 0x2, 0x2, 
    0x92, 0x6, 0x3, 0x2, 0x2, 0x2, 0x93, 0x94, 0x7, 0x5178, 0x2, 0x2, 0x94, 
    0x95, 0x7, 0x991a, 0x2, 0x2, 0x95, 0x8, 0x3, 0x2, 0x2, 0x2, 0x96, 0x97, 
    0x7, 0x9579, 0x2, 0x2, 0x97, 0xa, 0x3, 0x2, 0x2, 0x2, 0x98, 0x99, 0x7, 
    0x929e, 0x2, 0x2, 0x99, 0xc, 0x3, 0x2, 0x2, 0x2, 0x9a, 0x9b, 0x7, 0x5178, 
    0x2, 0x2, 0x9b, 0xe, 0x3, 0x2, 0x2, 0x2, 0x9c, 0x9d, 0x7, 0x5147, 0x2, 
    0x2, 0x9d, 0x10, 0x3, 0x2, 0x2, 0x2, 0x9e, 0x9f, 0x7, 0x65bf, 0x2, 0x2, 
    0x9f, 0x12, 0x3, 0x2, 0x2, 0x2, 0xa0, 0xa1, 0x7, 0x65bf, 0x2, 0x2, 0xa1, 
    0xa2, 0x7, 0x5178, 0x2, 0x2, 0xa2, 0x14, 0x3, 0x2, 0x2, 0x2, 0xa3, 0xa4, 
    0x7, 0x53d8, 0x2, 0x2, 0xa4, 0x16, 0x3, 0x2, 0x2, 0x2, 0xa5, 0xa6, 0x7, 
    0x4ee7, 0x2, 0x2, 0xa6, 0xa7, 0x7, 0x65bf, 0x2, 0x2, 0xa7, 0x18, 0x3, 
    0x2, 0x2, 0x2, 0xa8, 0xa9, 0x7, 0x5440, 0x2, 0x2, 0xa9, 0xaa, 0x7, 0x670b, 
    0x2, 0x2, 0xaa, 0x1a, 0x3, 0x2, 0x2, 0x2, 0xab, 0xac, 0x7, 0x8855, 0x2, 
    0x2, 0xac, 0x1c, 0x3, 0x2, 0x2, 0x2, 0xad, 0xae, 0x7, 0x6b34, 0x2, 0x2, 
    0xae, 0xaf, 0x7, 0x884e, 0x2, 0x2, 0xaf, 0xb0, 0x7, 0x6631, 0x2, 0x2, 
    0xb0, 0xb1, 0x7, 0x8855, 0x2, 0x2, 0xb1, 0x1e, 0x3, 0x2, 0x2, 0x2, 0xb2, 
    0xb3, 0x7, 0x5fc7, 0x2, 0x2, 0xb3, 0xb4, 0x7, 0x514a, 0x2, 0x2, 0xb4, 
    0xb5, 0x7, 0x5f99, 0x2, 0x2, 0xb5, 0x20, 0x3, 0x2, 0x2, 0x2, 0xb6, 0xb7, 
    0x7, 0x66f2, 0x2, 0x2, 0xb7, 0x22, 0x3, 0x2, 0x2, 0x2, 0xb8, 0xb9, 0x7, 
    0x6631, 0x2, 0x2, 0xb9, 0xba, 0x7, 0x8855, 0x2, 0x2, 0xba, 0xbb, 0x7, 
    0x66f2, 0x2, 0x2, 0xbb, 0x24, 0x3, 0x2, 0x2, 0x2, 0xbc, 0xbd, 0x7, 0x4e45, 
    0x2, 0x2, 0xbd, 0xbe, 0x7, 0x884e, 0x2, 0x2, 0xbe, 0xbf, 0x7, 0x6631, 
    0x2, 0x2, 0xbf, 0xc0, 0x7, 0x8855, 0x2, 0x2, 0xc0, 0xc1, 0x7, 0x66f2, 
    0x2, 0x2, 0xc1, 0x26, 0x3, 0x2, 0x2, 0x2, 0xc2, 0xc3, 0x7, 0x6631, 0x2, 
    0x2, 0xc3, 0xc4, 0x7, 0x8b04, 0x2, 0x2, 0xc4, 0x28, 0x3, 0x2, 0x2, 0x2, 
    0xc5, 0xc6, 0x7, 0x4e4d, 0x2, 0x2, 0xc6, 0xc7, 0x7, 0x8855, 0x2, 0x2, 
    0xc7, 0xc8, 0x7, 0x4e61, 0x2, 0x2, 0xc8, 0x2a, 0x3, 0x2, 0x2, 0x2, 0xc9, 
    0xca, 0x7, 0x8007, 0x2, 0x2, 0xca, 0x2c, 0x3, 0x2, 0x2, 0x2, 0xcb, 0xcc, 
    0x7, 0x4ecc, 0x2, 0x2, 0xcc, 0xcd, 0x7, 0x670b, 0x2, 0x2, 0xcd, 0x2e, 
    0x3, 0x2, 0x2, 0x2, 0xce, 0xcf, 0x7, 0x540f, 0x2, 0x2, 0xcf, 0xd0, 0x7, 
    0x4e4d, 0x2, 0x2, 0xd0, 0x30, 0x3, 0x2, 0x2, 0x2, 0xd1, 0xd2, 0x7, 0x670b, 
    0x2, 0x2, 0xd2, 0x32, 0x3, 0x2, 0x2, 0x2, 0xd3, 0xd4, 0x7, 0x9666, 0x2, 
    0x2, 0xd4, 0x34, 0x3, 0x2, 0x2, 0x2, 0xd5, 0xd6, 0x7, 0x6616, 0x2, 0x2, 
    0xd6, 0xd7, 0x7, 0x4e4d, 0x2, 0x2, 0xd7, 0x36, 0x3, 0x2, 0x2, 0x2, 0xd8, 
    0xd9, 0x7, 0x4ecc, 0x2, 0x2, 0xd9, 0x38, 0x3, 0x2, 0x2, 0x2, 0xda, 0xdb, 
    0x7, 0x6631, 0x2, 0x2, 0xdb, 0xdc, 0x7, 0x77e5, 0x2, 0x2, 0xdc, 0x3a, 
    0x3, 0x2, 0x2, 0x2, 0xdd, 0xde, 0x7, 0x4ecc, 0x2, 0x2, 0xde, 0xdf, 0x7, 
    0x4e0f, 0x2, 0x2, 0xdf, 0xe0, 0x7, 0x5fab, 0x2, 0x2, 0xe0, 0xe1, 0x7, 
    0x5b5a, 0x2, 0x2, 0xe1, 0xe2, 0x7, 0x77e5, 0x2, 0x2, 0xe2, 0x3c, 0x3, 
    0x2, 0x2, 0x2, 0xe3, 0xe4, 0x7, 0x4e45, 0x2, 0x2, 0xe4, 0xe5, 0x7, 0x5f99, 
    0x2, 0x2, 0xe5, 0x3e, 0x3, 0x2, 0x2, 0x2, 0xe6, 0xe7, 0x7, 0x4e45, 0x2, 
    0x2, 0xe7, 0xe8, 0x7, 0x6b7a, 0x2, 0x2, 0xe8, 0xe9, 0x7, 0x7a7c, 0x2, 
    0x2, 0xe9, 0xea, 0x7, 0x7123, 0x2, 0x2, 0xea, 0x40, 0x3, 0x2, 0x2, 0x2, 
    0xeb, 0xec, 0x7, 0x4e45, 0x2, 0x2, 0xec, 0xed, 0x7, 0x5f99, 0x2, 0x2, 
    0xed, 0xee, 0x7, 0x77e5, 0x2, 0x2, 0xee, 0x42, 0x3, 0x2, 0x2, 0x2, 0xef, 
    0xf0, 0x7, 0x5440, 0x2, 0x2, 0xf0, 0xf1, 0x7, 0x5619, 0x2, 0x2, 0xf1, 
    0xf2, 0x7, 0x89c2, 0x2, 0x2, 0xf2, 0x44, 0x3, 0x2, 0x2, 0x2, 0xf3, 0xf4, 
    0x7, 0x4e4d, 0x2, 0x2, 0xf4, 0xf5, 0x7, 0x66fa, 0x2, 0x2, 0xf5, 0x46, 
    0x3, 0x2, 0x2, 0x2, 0xf6, 0xf7, 0x7, 0x65bb, 0x2, 0x2, 0xf7, 0xf8, 0x7, 
    0x60a1, 0x2, 0x2, 0xf8, 0x48, 0x3, 0x2, 0x2, 0x2, 0xf9, 0xfa, 0x7, 0x4e4d, 
    0x2, 0x2, 0xfa, 0xfb, 0x7, 0x7fab, 0x2, 0x2, 0xfb, 0x4a, 0x3, 0x2, 0x2, 
    0x2, 0xfc, 0xfd, 0x7, 0x726b, 0x2, 0x2, 0xfd, 0x4c, 0x3, 0x2, 0x2, 0x2, 
    0xfe, 0xff, 0x7, 0x5178, 0x2, 0x2, 0xff, 0x100, 0x7, 0x726b, 0x2, 0x2, 
    0x100, 0x101, 0x7, 0x5984, 0x2, 0x2, 0x101, 0x102, 0x7, 0x6631, 0x2, 
    0x2, 0x102, 0x4e, 0x3, 0x2, 0x2, 0x2, 0x103, 0x104, 0x7, 0x726b, 0x2, 
    0x2, 0x104, 0x105, 0x7, 0x4e4d, 0x2, 0x2, 0x105, 0x50, 0x3, 0x2, 0x2, 
    0x2, 0x106, 0x107, 0x7, 0x4e4d, 0x2, 0x2, 0x107, 0x108, 0x7, 0x726b, 
    0x2, 0x2, 0x108, 0x109, 0x7, 0x4e61, 0x2, 0x2, 0x109, 0x52, 0x3, 0x2, 
    0x2, 0x2, 0x10a, 0x10b, 0x7, 0x66fa, 0x2, 0x2, 0x10b, 0x10c, 0x7, 0x4e4d, 
    0x2, 0x2, 0x10c, 0x54, 0x3, 0x2, 0x2, 0x2, 0x10d, 0x10e, 0x7, 0x6cea, 
    0x2, 0x2, 0x10e, 0x10f, 0x7, 0x66f2, 0x2, 0x2, 0x10f, 0x56, 0x3, 0x2, 
    0x2, 0x2, 0x110, 0x111, 0x7, 0x7591, 0x2, 0x2, 0x111, 0x112, 0x7, 0x66f2, 
    0x2, 0x2, 0x112, 0x58, 0x3, 0x2, 0x2, 0x2, 0x113, 0x114, 0x7, 0x627b, 
    0x2, 0x2, 0x114, 0x115, 0x7, 0x66f2, 0x2, 0x2, 0x115, 0x5a, 0x3, 0x2, 
    0x2, 0x2, 0x116, 0x117, 0x7, 0x566d, 0x2, 0x2, 0x117, 0x5c, 0x3, 0x2, 
    0x2, 0x2, 0x118, 0x119, 0x7, 0x300e, 0x2, 0x2, 0x119, 0x11a, 0x7, 0x300e, 
    0x2, 0x2, 0x11a, 0x11e, 0x3, 0x2, 0x2, 0x2, 0x11b, 0x11d, 0xa, 0x2, 
    0x2, 0x2, 0x11c, 0x11b, 0x3, 0x2, 0x2, 0x2, 0x11d, 0x120, 0x3, 0x2, 
    0x2, 0x2, 0x11e, 0x11c, 0x3, 0x2, 0x2, 0x2, 0x11e, 0x11f, 0x3, 0x2, 
    0x2, 0x2, 0x11f, 0x121, 0x3, 0x2, 0x2, 0x2, 0x120, 0x11e, 0x3, 0x2, 
    0x2, 0x2, 0x121, 0x122, 0x7, 0x300f, 0x2, 0x2, 0x122, 0x123, 0x7, 0x300f, 
    0x2, 0x2, 0x123, 0x5e, 0x3, 0x2, 0x2, 0x2, 0x124, 0x126, 0x7, 0x300e, 
    0x2, 0x2, 0x125, 0x127, 0xa, 0x2, 0x2, 0x2, 0x126, 0x125, 0x3, 0x2, 
    0x2, 0x2, 0x127, 0x128, 0x3, 0x2, 0x2, 0x2, 0x128, 0x126, 0x3, 0x2, 
    0x2, 0x2, 0x128, 0x129, 0x3, 0x2, 0x2, 0x2, 0x129, 0x12a, 0x3, 0x2, 
    0x2, 0x2, 0x12a, 0x12b, 0x7, 0x300f, 0x2, 0x2, 0x12b, 0x60, 0x3, 0x2, 
    0x2, 0x2, 0x12c, 0x12d, 0x9, 0x3, 0x2, 0x2, 0x12d, 0x62, 0x3, 0x2, 0x2, 
    0x2, 0x12e, 0x12f, 0x7, 0x4e2f, 0x2, 0x2, 0x12f, 0x130, 0x7, 0x670b, 
    0x2, 0x2, 0x130, 0x131, 0x7, 0x967f, 0x2, 0x2, 0x131, 0x137, 0x7, 0x4e50, 
    0x2, 0x2, 0x132, 0x133, 0x7, 0x4e2f, 0x2, 0x2, 0x133, 0x134, 0x7, 0x7123, 
    0x2, 0x2, 0x134, 0x135, 0x7, 0x9672, 0x2, 0x2, 0x135, 0x137, 0x7, 0x4e50, 
    0x2, 0x2, 0x136, 0x12e, 0x3, 0x2, 0x2, 0x2, 0x136, 0x132, 0x3, 0x2, 
    0x2, 0x2, 0x137, 0x64, 0x3, 0x2, 0x2, 0x2, 0x138, 0x139, 0x7, 0x6242, 
    0x2, 0x2, 0x139, 0x13a, 0x7, 0x991a, 0x2, 0x2, 0x13a, 0x13b, 0x7, 0x5e80, 
    0x2, 0x2, 0x13b, 0x13c, 0x7, 0x4f57, 0x2, 0x2, 0x13c, 0x66, 0x3, 0x2, 
    0x2, 0x2, 0x13d, 0x13e, 0x7, 0x8b8c, 0x2, 0x2, 0x13e, 0x68, 0x3, 0x2, 
    0x2, 0x2, 0x13f, 0x140, 0x7, 0x65be, 0x2, 0x2, 0x140, 0x6a, 0x3, 0x2, 
    0x2, 0x2, 0x141, 0x142, 0x7, 0x4ee7, 0x2, 0x2, 0x142, 0x6c, 0x3, 0x2, 
    0x2, 0x2, 0x143, 0x144, 0x7, 0x82e7, 0x2, 0x2, 0x144, 0x6e, 0x3, 0x2, 
    0x2, 0x2, 0x145, 0x146, 0x7, 0x82e7, 0x2, 0x2, 0x146, 0x147, 0x7, 0x9760, 
    0x2, 0x2, 0x147, 0x70, 0x3, 0x2, 0x2, 0x2, 0x148, 0x149, 0x7, 0x7b4b, 
    0x2, 0x2, 0x149, 0x158, 0x7, 0x65be, 0x2, 0x2, 0x14a, 0x14b, 0x7, 0x4e0f, 
    0x2, 0x2, 0x14b, 0x14c, 0x7, 0x7b4b, 0x2, 0x2, 0x14c, 0x158, 0x7, 0x65be, 
    0x2, 0x2, 0x14d, 0x14e, 0x7, 0x4e0f, 0x2, 0x2, 0x14e, 0x14f, 0x7, 0x5929, 
    0x2, 0x2, 0x14f, 0x158, 0x7, 0x65be, 0x2, 0x2, 0x150, 0x151, 0x7, 0x4e0f, 
    0x2, 0x2, 0x151, 0x152, 0x7, 0x5c11, 0x2, 0x2, 0x152, 0x158, 0x7, 0x65be, 
    0x2, 0x2, 0x153, 0x154, 0x7, 0x5929, 0x2, 0x2, 0x154, 0x158, 0x7, 0x65be, 
    0x2, 0x2, 0x155, 0x156, 0x7, 0x5c11, 0x2, 0x2, 0x156, 0x158, 0x7, 0x65be, 
    0x2, 0x2, 0x157, 0x148, 0x3, 0x2, 0x2, 0x2, 0x157, 0x14a, 0x3, 0x2, 
    0x2, 0x2, 0x157, 0x14d, 0x3, 0x2, 0x2, 0x2, 0x157, 0x150, 0x3, 0x2, 
    0x2, 0x2, 0x157, 0x153, 0x3, 0x2, 0x2, 0x2, 0x157, 0x155, 0x3, 0x2, 
    0x2, 0x2, 0x158, 0x72, 0x3, 0x2, 0x2, 0x2, 0x159, 0x15a, 0x7, 0x51e3, 
    0x2, 0x2, 0x15a, 0x74, 0x3, 0x2, 0x2, 0x2, 0x15b, 0x15c, 0x7, 0x70bc, 
    0x2, 0x2, 0x15c, 0x15d, 0x7, 0x6631, 0x2, 0x2, 0x15d, 0x76, 0x3, 0x2, 
    0x2, 0x2, 0x15e, 0x15f, 0x7, 0x6048, 0x2, 0x2, 0x15f, 0x160, 0x7, 0x70bc, 
    0x2, 0x2, 0x160, 0x161, 0x7, 0x6631, 0x2, 0x2, 0x161, 0x78, 0x3, 0x2, 
    0x2, 0x2, 0x162, 0x163, 0x7, 0x4e2f, 0x2, 0x2, 0x163, 0x164, 0x7, 0x4e4d, 
    0x2, 0x2, 0x164, 0x7a, 0x3, 0x2, 0x2, 0x2, 0x165, 0x166, 0x7, 0x904f, 
    0x2, 0x2, 0x166, 0x7c, 0x3, 0x2, 0x2, 0x2, 0x167, 0x168, 0x7, 0x4e93, 
    0x2, 0x2, 0x168, 0x16b, 0x7, 0x4e93, 0x2, 0x2, 0x169, 0x16b, 0x7, 0x4e61, 
    0x2, 0x2, 0x16a, 0x167, 0x3, 0x2, 0x2, 0x2, 0x16a, 0x169, 0x3, 0x2, 
    0x2, 0x2, 0x16b, 0x7e, 0x3, 0x2, 0x2, 0x2, 0x16c, 0x16d, 0x5, 0x83, 
    0x42, 0x2, 0x16d, 0x171, 0x7, 0x53ca, 0x2, 0x2, 0x16e, 0x16f, 0x5, 0x83, 
    0x42, 0x2, 0x16f, 0x170, 0x5, 0x81, 0x41, 0x2, 0x170, 0x172, 0x3, 0x2, 
    0x2, 0x2, 0x171, 0x16e, 0x3, 0x2, 0x2, 0x2, 0x172, 0x173, 0x3, 0x2, 
    0x2, 0x2, 0x173, 0x171, 0x3, 0x2, 0x2, 0x2, 0x173, 0x174, 0x3, 0x2, 
    0x2, 0x2, 0x174, 0x80, 0x3, 0x2, 0x2, 0x2, 0x175, 0x176, 0x9, 0x4, 0x2, 
    0x2, 0x176, 0x82, 0x3, 0x2, 0x2, 0x2, 0x177, 0x179, 0x5, 0x85, 0x43, 
    0x2, 0x178, 0x177, 0x3, 0x2, 0x2, 0x2, 0x179, 0x17a, 0x3, 0x2, 0x2, 
    0x2, 0x17a, 0x178, 0x3, 0x2, 0x2, 0x2, 0x17a, 0x17b, 0x3, 0x2, 0x2, 
    0x2, 0x17b, 0x84, 0x3, 0x2, 0x2, 0x2, 0x17c, 0x17d, 0x9, 0x5, 0x2, 0x2, 
    0x17d, 0x86, 0x3, 0x2, 0x2, 0x2, 0x17e, 0x17f, 0x9, 0x6, 0x2, 0x2, 0x17f, 
    0x88, 0x3, 0x2, 0x2, 0x2, 0x180, 0x181, 0x9, 0x7, 0x2, 0x2, 0x181, 0x8a, 
    0x3, 0x2, 0x2, 0x2, 0x182, 0x184, 0x9, 0x8, 0x2, 0x2, 0x183, 0x182, 
    0x3, 0x2, 0x2, 0x2, 0x184, 0x185, 0x3, 0x2, 0x2, 0x2, 0x185, 0x183, 
    0x3, 0x2, 0x2, 0x2, 0x185, 0x186, 0x3, 0x2, 0x2, 0x2, 0x186, 0x187, 
    0x3, 0x2, 0x2, 0x2, 0x187, 0x188, 0x8, 0x46, 0x2, 0x2, 0x188, 0x8c, 
    0x3, 0x2, 0x2, 0x2, 0x189, 0x18a, 0x7, 0x4e45, 0x2, 0x2, 0x18a, 0x18b, 
    0x7, 0x6b64, 0x2, 0x2, 0x18b, 0x8e, 0x3, 0x2, 0x2, 0x2, 0xc, 0x2, 0x11e, 
    0x128, 0x136, 0x157, 0x16a, 0x173, 0x17a, 0x183, 0x185, 0x3, 0x8, 0x2, 
    0x2, 
  };

  atn::ATNDeserializer deserializer;
  _atn = deserializer.deserialize(_serializedATN);

  size_t count = _atn.getNumberOfDecisions();
  _decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    _decisionToDFA.emplace_back(_atn.getDecisionState(i), i);
  }
}

wenyanLexer::Initializer wenyanLexer::_init;
